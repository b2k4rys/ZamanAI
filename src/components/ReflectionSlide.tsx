import type { ReflectionSlideData } from '@/types/reflection';
import { Progress } from '@/components/ui/progress';
import { Button } from '@/components/ui/button';
import { Target, Heart, Rocket, TrendingUp } from 'lucide-react';

interface ReflectionSlideProps {
  slide: ReflectionSlideData;
  onAction?: (action: string, data?: any) => void;
}

export const ReflectionSlide = ({ slide, onAction }: ReflectionSlideProps) => {
  const formatAmount = (amount: number) => {
    return new Intl.NumberFormat('ru-KZ').format(Math.abs(amount));
  };

  return (
    <div className="relative h-full w-full rounded-2xl bg-gradient-to-br from-primary/10 via-secondary/5 to-accent/10 p-8 flex flex-col justify-center items-center text-center">
      {slide.emoji && (
        <div className="text-6xl mb-6 animate-scale-in">{slide.emoji}</div>
      )}
      
      <h2 className="text-3xl font-bold text-foreground mb-4">{slide.title}</h2>
      
      {slide.subtitle && (
        <p className="text-lg text-muted-foreground mb-6">{slide.subtitle}</p>
      )}

      <div className="w-full max-w-md">
        {slide.type === 'summary' && slide.data && (
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="bg-card/50 rounded-lg p-4">
                <div className="text-2xl font-bold text-primary">{slide.data.topUpCount}</div>
                <div className="text-sm text-muted-foreground">üí∏ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π</div>
              </div>
              <div className="bg-card/50 rounded-lg p-4">
                <div className="text-2xl font-bold text-primary">{slide.data.foodCount}</div>
                <div className="text-sm text-muted-foreground">üçî –¢—Ä–∞—Ç –Ω–∞ –µ–¥—É</div>
              </div>
              <div className="bg-card/50 rounded-lg p-4">
                <div className="text-2xl font-bold text-primary">{formatAmount(slide.data.savingsSum)}</div>
                <div className="text-sm text-muted-foreground">üè¶ –ù–∞–∫–æ–ø–ª–µ–Ω–æ ‚Ç∏</div>
              </div>
              <div className="bg-card/50 rounded-lg p-4">
                <div className="text-2xl font-bold text-primary">{slide.data.donationsCount}</div>
                <div className="text-sm text-muted-foreground">üåø –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π</div>
              </div>
            </div>
            <div className="bg-card/50 rounded-lg p-4 mt-4">
              <div className="text-3xl font-bold text-foreground">{formatAmount(slide.data.totalSpend)} ‚Ç∏</div>
              <div className="text-sm text-muted-foreground">–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
            </div>
          </div>
        )}

        {slide.type === 'categories' && slide.data && (
          <div className="space-y-4">
            {slide.data.categories.map((cat: any, idx: number) => (
              <div key={idx} className="bg-card/50 rounded-lg p-4 text-left">
                <div className="flex justify-between items-center mb-2">
                  <span className="font-semibold text-foreground">{cat.category}</span>
                  <span className="text-lg font-bold text-primary">{formatAmount(cat.amount)} ‚Ç∏</span>
                </div>
                <Progress value={cat.percentage} className="h-3" />
                <div className="text-xs text-muted-foreground mt-1">
                  {cat.percentage.toFixed(1)}% –æ—Ç –≤—Å–µ—Ö —Ç—Ä–∞—Ç
                </div>
              </div>
            ))}
          </div>
        )}

        {slide.type === 'goals' && slide.data && (
          <div className="space-y-6">
            <div className="bg-card/50 rounded-xl p-6">
              <div className="flex items-center gap-3 mb-4">
                <Target className="h-8 w-8 text-primary" />
                <div className="text-left">
                  <div className="font-bold text-lg text-foreground">{slide.data.goal.name}</div>
                  <div className="text-sm text-muted-foreground">
                    {formatAmount(slide.data.goal.current)} / {formatAmount(slide.data.goal.target)} ‚Ç∏
                  </div>
                </div>
              </div>
              <Progress value={slide.data.progress} className="h-4 mb-2" />
              <div className="text-center">
                <span className="text-2xl font-bold text-primary">{slide.data.progress.toFixed(1)}%</span>
                <span className="text-sm text-muted-foreground ml-2">–≤—ã–ø–æ–ª–Ω–µ–Ω–æ</span>
              </div>
            </div>
            <p className="text-sm text-muted-foreground">
              –¢—ã —Å—Ç–∞–ª –Ω–∞ {slide.data.progress.toFixed(1)}% –±–ª–∏–∂–µ –∫ –º–µ—á—Ç–µ ¬´{slide.data.goal.name}¬ª
            </p>
          </div>
        )}

        {slide.type === 'generosity' && slide.data && (
          <div className="space-y-4">
            {slide.data.donations > 0 && (
              <div className="bg-card/50 rounded-lg p-6">
                <Heart className="h-10 w-10 text-primary mx-auto mb-3" />
                <div className="text-3xl font-bold text-foreground">{slide.data.donations}</div>
                <div className="text-sm text-muted-foreground mt-2">–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π —Å–¥–µ–ª–∞–Ω–æ</div>
                <p className="text-xs text-muted-foreground mt-4">
                  –©–µ–¥—Ä—ã–π –º–µ—Å—è—Ü üåø ‚Äî –ø—É—Å—Ç—å –¥–æ–±—Ä–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è
                </p>
              </div>
            )}
            {slide.data.savings > 0 && (
              <div className="bg-card/50 rounded-lg p-6">
                <TrendingUp className="h-10 w-10 text-primary mx-auto mb-3" />
                <div className="text-3xl font-bold text-foreground">{formatAmount(slide.data.savings)} ‚Ç∏</div>
                <div className="text-sm text-muted-foreground mt-2">–Ω–∞–∫–æ–ø–ª–µ–Ω–æ –∑–∞ –º–µ—Å—è—Ü</div>
                <p className="text-xs text-muted-foreground mt-4">
                  –ö—É—Ä—Å –Ω–∞ –±—É–¥—É—â–∏–µ —Ü–µ–ª–∏ üåÖ ‚Äî —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!
                </p>
              </div>
            )}
          </div>
        )}

        {slide.type === 'cta' && (
          <div className="space-y-4">
            <Rocket className="h-16 w-16 text-primary mx-auto mb-4" />
            <p className="text-muted-foreground mb-6">
              –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—É—Ç—å –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ
            </p>
            <div className="space-y-3">
              <Button 
                onClick={() => onAction?.('create_goal')} 
                className="w-full"
                size="lg"
              >
                üéØ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ü–µ–ª—å
              </Button>
              <Button 
                onClick={() => onAction?.('create_challenge')} 
                variant="outline"
                className="w-full"
                size="lg"
              >
                ‚ö° –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂
              </Button>
              <Button 
                onClick={() => onAction?.('view_analytics')} 
                variant="outline"
                className="w-full"
                size="lg"
              >
                üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
              </Button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};
